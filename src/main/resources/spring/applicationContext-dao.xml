<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 配置自动扫描，即除了controller，其他注解都扫描 -->
    <context:component-scan base-package="cn.jxufe">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--主数据库属性配置文件-->
    <context:property-placeholder location="classpath:db-config.properties" ignore-unresolvable="true"/>

    <!--因为druid的drive好像必须传入driver类型的，所以这里先构造bean-->
    <bean id="drive" class="${jdbc.driver}"/>

    <!--druid配置信息列表
    https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!--基本配置-->
        <property name="driver" ref="drive"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- 后续配置 -->
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${jdbc.initialSize}" />
        <!--最小空闲连接-->
        <property name="minIdle" value="${jdbc.minIdle}" />
        <!--最大活跃的连接数是10-->
        <property name="maxActive" value="${jdbc.maxActive}" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${jdbc.maxWait}" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />

        <!--测试-->
        <!--用来检测是否为有效sql， 配置成null，下面三个都不会起作用-->
        <property name="validationQuery" value="${jdbc.validationQuery}" />
        <!--空闲时检测存活-->
        <property name="testWhileIdle" value="${jdbc.testWhenIdle}" />
        <!--请求连接时-->
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
        <!--归还连接时-->
        <property name="testOnReturn" value="${jdbc.testOnReturn}" />
        <!--是否缓存preparedStatement，即PSCache对如oracle等数据库有性能上的巨大提升，mysql建议关闭-->
        <property name="poolPreparedStatements" value="${jdbc.poolPreparedStatement}"/>
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <property name="filters" value="${jdbc.filter}" />
    </bean>


    <!--此bean的命名千千万万要注意，一定要和下面配置的MapperScannerConfigurer的
    sqlSessionFactoryBeanName属性value一样，虽然用的是value，看似不相干。但不一样一定报错，而且很难查出！！！-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
        <property name="dataSource" ref="dataSource"/>
        <!--Property 'configuration' and 'configLocation' can not specified with together-->
        <!--<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>-->
<!--        <property name="typeAliases">-->
<!--            <set>-->
<!--                <value type="cn.jxufe.bean.User"/>-->
<!--                <value type="cn.jxufe.bean.Article"/>-->
<!--                <value type="cn.jxufe.bean.ArticleContent"/>-->
<!--                <value type="cn.jxufe.bean.Corpus"/>-->
<!--                <value type="cn.jxufe.bean.Comment"/>-->
<!--                <value type="cn.jxufe.bean.Follow"/>-->
<!--            </set>-->
<!--        </property>-->
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
                <!--关闭二级缓存-->
                <property name="cacheEnabled" value="false"/>

                <!--开启延迟加载-->
                <property name="lazyLoadingEnabled" value="true"/>
                <property name="aggressiveLazyLoading" value="false"/>
            </bean>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 配置扫描包的路径
		如果要扫描多个包，中间使用半角逗号分隔
		要求mapper.xml和mapper.java同名且在同一个目录
		 -->
        <property name="basePackage" value="cn.jxufe.dao"/>
        <!--sqlSessionFactory被废弃了，应该能自动检测，所以不用手动配置！-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>-->
        <!-- 使用sqlSessionFactoryBeanName,这个属性时String类型的！ 所以应该做标识用，无所谓何值了，具体后面再具体了解！-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--spring事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--会自动扫描@Transaction的注解！-->
    <tx:annotation-driven/>
</beans>